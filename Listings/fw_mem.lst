C51 COMPILER V9.60.7.0   FW_MEM                                                            10/18/2024 22:44:44 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE FW_MEM
OBJECT MODULE PLACED IN .\Objects\fw_mem.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE FwLib_STC8\src\fw_mem.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\FwLib_ST
                    -C8\include) DEFINE(__CX51__,__CONF_MCU_MODEL=MCU_MODEL_STC8H1K28,__CONF_FOSC=24000000UL) DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\fw_mem.lst) OBJECT(.\Objects\fw_mem.obj)

line level    source

   1          // Copyright 2021 IOsetting <iosetting(at)outlook.com>
   2          //
   3          // Licensed under the Apache License, Version 2.0 (the "License");
   4          // you may not use this file except in compliance with the License.
   5          // You may obtain a copy of the License at
   6          //
   7          //     http://www.apache.org/licenses/LICENSE-2.0
   8          //
   9          // Unless required by applicable law or agreed to in writing, software
  10          // distributed under the License is distributed on an "AS IS" BASIS,
  11          // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  12          // See the License for the specific language governing permissions and
  13          // limitations under the License.
  14          
  15          #include "fw_mem.h"
  16          
  17          void MEM_SelectWorkRegGroup(MEM_WorkRegGroup_t WorkRegGroup)
  18          {
  19   1              RS0 = WorkRegGroup & 0x01;
  20   1              RS1 = (WorkRegGroup >> 1) & 0x01;
  21   1      }
  22          
  23          void MEM_SetOnchipExtRAM(HAL_State_t HAL_State)
  24          {
  25   1              AUXR = AUXR & ~(0x01 << 1) | (HAL_State << 1);
  26   1      }
  27          
  28          #if (__CONF_MCU_TYPE == 3  )
  29          void MEM_ReadChipID(uint8_t *buff)
  30          {
  31   1          uint8_t i;
  32   1              P_SW2 = 0x80;
  33   1              for (i = 0; i < 32; i++)
  34   1              {
  35   2                      *(buff + i) = MEM_ReadXDATA(CHIPIDxx + i);
  36   2              }
  37   1              P_SW2 = 0x00;
  38   1      }
  39          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     81    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
